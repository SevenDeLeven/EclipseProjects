package com.sevendeleven.filebackup.main;

import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

public class DataTranslator {
	
	public static Integer readInteger(InputStream is) {
		ByteBuffer buffer = ByteBuffer.allocate(Integer.BYTES);
		for (int i = 0; i < Integer.BYTES; i++) {
			try {
				buffer.put((byte)is.read());
			} catch (IOException e) {
				System.err.println("Error processing integer");
				System.exit(-1);
			}
		}
		buffer.flip();
		return buffer.getInt();
	}
	
	public static Float readFloat(InputStream is) {
		ByteBuffer buffer = ByteBuffer.allocate(Float.BYTES);
		for (int i = 0; i < Float.BYTES; i++) {
			try {
				buffer.put((byte)is.read());
			} catch (IOException e) {
				System.err.println("Error processing float");
				System.exit(-1);
			}
		}
		buffer.flip();
		return buffer.getFloat();
	}
	
	public static Double readDouble(InputStream is) {
		ByteBuffer buffer = ByteBuffer.allocate(Double.BYTES);
		for (int i = 0; i < Double.BYTES; i++) {
			try {
				buffer.put((byte)is.read());
			} catch (IOException e) {
				System.err.println("Error processing double");
				System.exit(-1);
			}
		}
		buffer.flip();
		return buffer.getDouble();
	}
	
	public static Long readLong(InputStream is) {
		ByteBuffer buffer = ByteBuffer.allocate(Long.BYTES);
		for (int i = 0; i < Long.BYTES; i++) {
			try {
				buffer.put((byte)is.read());
			} catch (IOException e) {
				System.err.println("Error processing double");
				System.exit(-1);
			}
		}
		buffer.flip();
		return buffer.getLong();
	}
	
}
